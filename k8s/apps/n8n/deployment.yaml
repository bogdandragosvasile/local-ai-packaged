apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: n8n-data
  namespace: local-ai-n8n
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
  storageClassName: local-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: n8n
  namespace: local-ai-n8n
  labels:
    app: n8n
    version: v1
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: n8n
  template:
    metadata:
      labels:
        app: n8n
        version: v1
    spec:
      serviceAccountName: n8n
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: n8n
        image: n8nio/n8n:latest
        imagePullPolicy: IfNotPresent
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          runAsNonRoot: true
          runAsUser: 1000
          capabilities:
            drop:
            - ALL
        ports:
        - name: http
          containerPort: 5678
          protocol: TCP
        env:
        # From ConfigMap
        - name: N8N_PORT
          valueFrom:
            configMapKeyRef:
              name: n8n-config
              key: N8N_PORT
        - name: N8N_PROTOCOL
          valueFrom:
            configMapKeyRef:
              name: n8n-config
              key: N8N_PROTOCOL
        - name: N8N_LISTEN_ADDRESS
          valueFrom:
            configMapKeyRef:
              name: n8n-config
              key: N8N_LISTEN_ADDRESS
        - name: DB_TYPE
          valueFrom:
            configMapKeyRef:
              name: n8n-config
              key: DB_TYPE
        - name: DB_POSTGRESDB_HOST
          valueFrom:
            configMapKeyRef:
              name: n8n-config
              key: DB_POSTGRESDB_HOST
        - name: DB_POSTGRESDB_PORT
          valueFrom:
            configMapKeyRef:
              name: n8n-config
              key: DB_POSTGRESDB_PORT
        - name: DB_POSTGRESDB_DATABASE
          valueFrom:
            configMapKeyRef:
              name: n8n-config
              key: DB_POSTGRESDB_DATABASE
        - name: N8N_TRUSTED_HEADER
          valueFrom:
            configMapKeyRef:
              name: n8n-config
              key: N8N_TRUSTED_HEADER
        - name: WEBHOOK_URL
          valueFrom:
            configMapKeyRef:
              name: n8n-config
              key: WEBHOOK_URL
        - name: WEBHOOK_TUNNEL_URL
          valueFrom:
            configMapKeyRef:
              name: n8n-config
              key: WEBHOOK_TUNNEL_URL
        - name: N8N_SECURE_COOKIE
          valueFrom:
            configMapKeyRef:
              name: n8n-config
              key: N8N_SECURE_COOKIE
        - name: COOKIE_SAMESITE
          valueFrom:
            configMapKeyRef:
              name: n8n-config
              key: COOKIE_SAMESITE
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: n8n-config
              key: LOG_LEVEL
        - name: OLLAMA_BASE_URL
          valueFrom:
            configMapKeyRef:
              name: n8n-config
              key: OLLAMA_BASE_URL
        - name: OPENWEBUI_BASE_URL
          valueFrom:
            configMapKeyRef:
              name: n8n-config
              key: OPENWEBUI_BASE_URL
        - name: QDRANT_URL
          valueFrom:
            configMapKeyRef:
              name: n8n-config
              key: QDRANT_URL
        - name: NEO4J_URI
          valueFrom:
            configMapKeyRef:
              name: n8n-config
              key: NEO4J_URI
        - name: QUEUE_BULL_REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: n8n-config
              key: QUEUE_BULL_REDIS_HOST
        - name: QUEUE_BULL_REDIS_PORT
          valueFrom:
            configMapKeyRef:
              name: n8n-config
              key: QUEUE_BULL_REDIS_PORT
        - name: N8N_AUTH_EXCLUDEENDPOINTS
          valueFrom:
            configMapKeyRef:
              name: n8n-config
              key: N8N_AUTH_EXCLUDEENDPOINTS
        - name: N8N_EXTERNAL_FRONTEND_URL
          valueFrom:
            configMapKeyRef:
              name: n8n-config
              key: N8N_EXTERNAL_FRONTEND_URL

        # From Secrets
        - name: DB_POSTGRESDB_USER
          valueFrom:
            secretKeyRef:
              name: n8n-secrets
              key: DB_POSTGRESDB_USER
        - name: DB_POSTGRESDB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: n8n-secrets
              key: DB_POSTGRESDB_PASSWORD
        - name: N8N_ENCRYPTION_KEY
          valueFrom:
            secretKeyRef:
              name: n8n-secrets
              key: N8N_ENCRYPTION_KEY
        - name: N8N_USER_MANAGEMENT_JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: n8n-secrets
              key: N8N_USER_MANAGEMENT_JWT_SECRET
        - name: N8N_USER_MANAGEMENT_JWT_REFRESH_SECRET
          valueFrom:
            secretKeyRef:
              name: n8n-secrets
              key: N8N_USER_MANAGEMENT_JWT_REFRESH_SECRET
        - name: NEO4J_USER
          valueFrom:
            secretKeyRef:
              name: n8n-secrets
              key: NEO4J_USER
        - name: NEO4J_PASSWORD
          valueFrom:
            secretKeyRef:
              name: n8n-secrets
              key: NEO4J_PASSWORD
        - name: KEYCLOAK_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: n8n-secrets
              key: KEYCLOAK_CLIENT_SECRET

        # Pod metadata (standard)
        - name: HOSTNAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName

        volumeMounts:
        - name: n8n-data
          mountPath: /home/node/.n8n
        - name: tmp
          mountPath: /tmp

        livenessProbe:
          httpGet:
            path: /healthz
            port: http
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3

        readinessProbe:
          httpGet:
            path: /healthz
            port: http
            scheme: HTTP
          initialDelaySeconds: 15
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3

        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "1000m"

      volumes:
      - name: n8n-data
        persistentVolumeClaim:
          claimName: n8n-data
      - name: tmp
        emptyDir: {}

      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - n8n
              topologyKey: kubernetes.io/hostname

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: n8n
  namespace: local-ai-n8n
  labels:
    app: n8n
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: n8n
  namespace: local-ai-n8n
rules:
- apiGroups: [""]
  resources: ["configmaps", "secrets"]
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: n8n
  namespace: local-ai-n8n
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: n8n
subjects:
- kind: ServiceAccount
  name: n8n
  namespace: local-ai-n8n
