{
  "clientId": "oauth2-proxy",
  "name": "OAuth2 Proxy - Central SSO Gateway",
  "description": "Central OAuth2 Proxy client for SSO authentication across all local-ai services",
  "enabled": true,
  "protocol": "openid-connect",
  "publicClient": false,
  "standardFlowEnabled": true,
  "implicitFlowEnabled": false,
  "directAccessGrantsEnabled": true,
  "serviceAccountsEnabled": true,
  "authorizationServicesEnabled": true,
  "bearerOnly": false,
  "consentRequired": false,
  "fullScopeAllowed": true,
  "frontchannelLogout": true,
  "attributes": {
    "backchannel.logout.session.required": "true",
    "backchannel.logout.revoke.offline.tokens": "true",
    "post.logout.redirect.uris": "https://n8n.lupulup.com+https://flowise.lupulup.com+https://neo4j.lupulup.com+https://searxng.lupulup.com+https://keycloak.mylegion5pro.me",
    "pkce.code.challenge.method": "S256",
    "oauth2.device.authorization.grant.enabled": "false",
    "oidc.ciba.grant.enabled": "false",
    "client.secret.creation.time": "1666000000"
  },
  "redirectUris": [
    "https://n8n.lupulup.com/oauth2/callback",
    "https://flowise.lupulup.com/oauth2/callback",
    "https://neo4j.lupulup.com/oauth2/callback",
    "https://searxng.lupulup.com/oauth2/callback",
    "https://keycloak.mylegion5pro.me/oauth2/callback",
    "http://localhost:4180/oauth2/callback"
  ],
  "webOrigins": [
    "https://n8n.lupulup.com",
    "https://flowise.lupulup.com",
    "https://neo4j.lupulup.com",
    "https://searxng.lupulup.com",
    "https://keycloak.mylegion5pro.me",
    "http://localhost:4180"
  ],
  "protocolMappers": [
    {
      "name": "username",
      "protocol": "openid-connect",
      "protocolMapper": "oidc-usermodel-attribute-mapper",
      "consentRequired": false,
      "config": {
        "userinfo.token.claim": "true",
        "user.attribute": "username",
        "id.token.claim": "true",
        "access.token.claim": "true",
        "claim.name": "preferred_username",
        "jsonType.label": "String"
      }
    },
    {
      "name": "email",
      "protocol": "openid-connect",
      "protocolMapper": "oidc-usermodel-property-mapper",
      "consentRequired": false,
      "config": {
        "userinfo.token.claim": "true",
        "user.attribute": "email",
        "id.token.claim": "true",
        "access.token.claim": "true",
        "claim.name": "email",
        "jsonType.label": "String"
      }
    },
    {
      "name": "given name",
      "protocol": "openid-connect",
      "protocolMapper": "oidc-usermodel-property-mapper",
      "consentRequired": false,
      "config": {
        "userinfo.token.claim": "true",
        "user.attribute": "firstName",
        "id.token.claim": "true",
        "access.token.claim": "true",
        "claim.name": "given_name",
        "jsonType.label": "String"
      }
    },
    {
      "name": "family name",
      "protocol": "openid-connect",
      "protocolMapper": "oidc-usermodel-property-mapper",
      "consentRequired": false,
      "config": {
        "userinfo.token.claim": "true",
        "user.attribute": "lastName",
        "id.token.claim": "true",
        "access.token.claim": "true",
        "claim.name": "family_name",
        "jsonType.label": "String"
      }
    },
    {
      "name": "groups",
      "protocol": "openid-connect",
      "protocolMapper": "oidc-usermodel-realm-role-mapper",
      "consentRequired": false,
      "config": {
        "multivalued": "true",
        "user.attribute": "groups",
        "id.token.claim": "true",
        "access.token.claim": "true",
        "claim.name": "groups",
        "jsonType.label": "String"
      }
    },
    {
      "name": "Client IP Address",
      "protocol": "openid-connect",
      "protocolMapper": "oidc-usersessionmodel-note-mapper",
      "consentRequired": false,
      "config": {
        "user.session.note": "clientAddress",
        "id.token.claim": "true",
        "access.token.claim": "true",
        "claim.name": "client_ip",
        "jsonType.label": "String"
      }
    }
  ],
  "defaultClientScopes": [
    "web-origins",
    "profile",
    "email",
    "roles",
    "acr"
  ],
  "optionalClientScopes": [
    "address",
    "phone",
    "offline_access",
    "microprofile-jwt"
  ]
}
